"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const dockerPlugin = require("snyk-docker-plugin");
const rubygemsPlugin = require("./rubygems");
const mvnPlugin = require("snyk-mvn-plugin");
const gradlePlugin = require("snyk-gradle-plugin");
const sbtPlugin = require("snyk-sbt-plugin");
const pythonPlugin = require("snyk-python-plugin");
const goPlugin = require("snyk-go-plugin");
const nugetPlugin = require("snyk-nuget-plugin");
const phpPlugin = require("snyk-php-plugin");
const nodejsPlugin = require("./nodejs-plugin");
function loadPlugin(packageManager, options = {}) {
    if (options.docker) {
        return dockerPlugin;
    }
    switch (packageManager) {
        case 'npm': {
            return nodejsPlugin;
        }
        case 'rubygems': {
            return rubygemsPlugin;
        }
        case 'maven': {
            return mvnPlugin;
        }
        case 'gradle': {
            return gradlePlugin;
        }
        case 'sbt': {
            return sbtPlugin;
        }
        case 'yarn': {
            return nodejsPlugin;
        }
        case 'pip': {
            return pythonPlugin;
        }
        case 'golangdep':
        case 'govendor': {
            return goPlugin;
        }
        case 'nuget': {
            return nugetPlugin;
        }
        case 'paket': {
            return nugetPlugin;
        }
        case 'composer': {
            return phpPlugin;
        }
        default: {
            throw new Error(`Unsupported package manager: ${packageManager}`);
        }
    }
}
exports.loadPlugin = loadPlugin;
function getPluginOptions(packageManager, options) {
    const pluginOptions = {};
    switch (packageManager) {
        case 'gradle': {
            if (options['all-sub-projects']) {
                pluginOptions.multiDepRoots = true;
            }
            return pluginOptions;
        }
        default: {
            return pluginOptions;
        }
    }
}
exports.getPluginOptions = getPluginOptions;
//# sourceMappingURL=index.js.map